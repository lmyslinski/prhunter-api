/*
 * This file is generated by jOOQ.
 */
package io.prhunter.generated.tables.pojos;


import java.io.Serializable;
import java.time.OffsetDateTime;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ScheduledTasks implements Serializable {

    private static final long serialVersionUID = 1L;

    private final String         taskName;
    private final String         taskInstance;
    private final byte[]         taskData;
    private final OffsetDateTime executionTime;
    private final Boolean        picked;
    private final String         pickedBy;
    private final OffsetDateTime lastSuccess;
    private final OffsetDateTime lastFailure;
    private final Integer        consecutiveFailures;
    private final OffsetDateTime lastHeartbeat;
    private final Long           version;

    public ScheduledTasks(ScheduledTasks value) {
        this.taskName = value.taskName;
        this.taskInstance = value.taskInstance;
        this.taskData = value.taskData;
        this.executionTime = value.executionTime;
        this.picked = value.picked;
        this.pickedBy = value.pickedBy;
        this.lastSuccess = value.lastSuccess;
        this.lastFailure = value.lastFailure;
        this.consecutiveFailures = value.consecutiveFailures;
        this.lastHeartbeat = value.lastHeartbeat;
        this.version = value.version;
    }

    public ScheduledTasks(
        String         taskName,
        String         taskInstance,
        byte[]         taskData,
        OffsetDateTime executionTime,
        Boolean        picked,
        String         pickedBy,
        OffsetDateTime lastSuccess,
        OffsetDateTime lastFailure,
        Integer        consecutiveFailures,
        OffsetDateTime lastHeartbeat,
        Long           version
    ) {
        this.taskName = taskName;
        this.taskInstance = taskInstance;
        this.taskData = taskData;
        this.executionTime = executionTime;
        this.picked = picked;
        this.pickedBy = pickedBy;
        this.lastSuccess = lastSuccess;
        this.lastFailure = lastFailure;
        this.consecutiveFailures = consecutiveFailures;
        this.lastHeartbeat = lastHeartbeat;
        this.version = version;
    }

    /**
     * Getter for <code>public.scheduled_tasks.task_name</code>.
     */
    public String getTaskName() {
        return this.taskName;
    }

    /**
     * Getter for <code>public.scheduled_tasks.task_instance</code>.
     */
    public String getTaskInstance() {
        return this.taskInstance;
    }

    /**
     * Getter for <code>public.scheduled_tasks.task_data</code>.
     */
    public byte[] getTaskData() {
        return this.taskData;
    }

    /**
     * Getter for <code>public.scheduled_tasks.execution_time</code>.
     */
    public OffsetDateTime getExecutionTime() {
        return this.executionTime;
    }

    /**
     * Getter for <code>public.scheduled_tasks.picked</code>.
     */
    public Boolean getPicked() {
        return this.picked;
    }

    /**
     * Getter for <code>public.scheduled_tasks.picked_by</code>.
     */
    public String getPickedBy() {
        return this.pickedBy;
    }

    /**
     * Getter for <code>public.scheduled_tasks.last_success</code>.
     */
    public OffsetDateTime getLastSuccess() {
        return this.lastSuccess;
    }

    /**
     * Getter for <code>public.scheduled_tasks.last_failure</code>.
     */
    public OffsetDateTime getLastFailure() {
        return this.lastFailure;
    }

    /**
     * Getter for <code>public.scheduled_tasks.consecutive_failures</code>.
     */
    public Integer getConsecutiveFailures() {
        return this.consecutiveFailures;
    }

    /**
     * Getter for <code>public.scheduled_tasks.last_heartbeat</code>.
     */
    public OffsetDateTime getLastHeartbeat() {
        return this.lastHeartbeat;
    }

    /**
     * Getter for <code>public.scheduled_tasks.version</code>.
     */
    public Long getVersion() {
        return this.version;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("ScheduledTasks (");

        sb.append(taskName);
        sb.append(", ").append(taskInstance);
        sb.append(", ").append("[binary...]");
        sb.append(", ").append(executionTime);
        sb.append(", ").append(picked);
        sb.append(", ").append(pickedBy);
        sb.append(", ").append(lastSuccess);
        sb.append(", ").append(lastFailure);
        sb.append(", ").append(consecutiveFailures);
        sb.append(", ").append(lastHeartbeat);
        sb.append(", ").append(version);

        sb.append(")");
        return sb.toString();
    }
}
