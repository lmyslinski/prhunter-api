/*
 * This file is generated by jOOQ.
 */
package io.prhunter.generated.tables.records;


import io.prhunter.generated.tables.GithubUser;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class GithubUserRecord extends UpdatableRecordImpl<GithubUserRecord> implements Record7<Long, String, String, String, String, LocalDateTime, LocalDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.github_user.id</code>.
     */
    public GithubUserRecord setId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.github_user.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.github_user.login</code>.
     */
    public GithubUserRecord setLogin(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.github_user.login</code>.
     */
    public String getLogin() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.github_user.email</code>.
     */
    public GithubUserRecord setEmail(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.github_user.email</code>.
     */
    public String getEmail() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.github_user.full_name</code>.
     */
    public GithubUserRecord setFullName(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.github_user.full_name</code>.
     */
    public String getFullName() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.github_user.access_token</code>.
     */
    public GithubUserRecord setAccessToken(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>public.github_user.access_token</code>.
     */
    public String getAccessToken() {
        return (String) get(4);
    }

    /**
     * Setter for <code>public.github_user.github_registered_at</code>.
     */
    public GithubUserRecord setGithubRegisteredAt(LocalDateTime value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>public.github_user.github_registered_at</code>.
     */
    public LocalDateTime getGithubRegisteredAt() {
        return (LocalDateTime) get(5);
    }

    /**
     * Setter for <code>public.github_user.registered_at</code>.
     */
    public GithubUserRecord setRegisteredAt(LocalDateTime value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>public.github_user.registered_at</code>.
     */
    public LocalDateTime getRegisteredAt() {
        return (LocalDateTime) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row7<Long, String, String, String, String, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    @Override
    public Row7<Long, String, String, String, String, LocalDateTime, LocalDateTime> valuesRow() {
        return (Row7) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return GithubUser.GITHUB_USER.ID;
    }

    @Override
    public Field<String> field2() {
        return GithubUser.GITHUB_USER.LOGIN;
    }

    @Override
    public Field<String> field3() {
        return GithubUser.GITHUB_USER.EMAIL;
    }

    @Override
    public Field<String> field4() {
        return GithubUser.GITHUB_USER.FULL_NAME;
    }

    @Override
    public Field<String> field5() {
        return GithubUser.GITHUB_USER.ACCESS_TOKEN;
    }

    @Override
    public Field<LocalDateTime> field6() {
        return GithubUser.GITHUB_USER.GITHUB_REGISTERED_AT;
    }

    @Override
    public Field<LocalDateTime> field7() {
        return GithubUser.GITHUB_USER.REGISTERED_AT;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getLogin();
    }

    @Override
    public String component3() {
        return getEmail();
    }

    @Override
    public String component4() {
        return getFullName();
    }

    @Override
    public String component5() {
        return getAccessToken();
    }

    @Override
    public LocalDateTime component6() {
        return getGithubRegisteredAt();
    }

    @Override
    public LocalDateTime component7() {
        return getRegisteredAt();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getLogin();
    }

    @Override
    public String value3() {
        return getEmail();
    }

    @Override
    public String value4() {
        return getFullName();
    }

    @Override
    public String value5() {
        return getAccessToken();
    }

    @Override
    public LocalDateTime value6() {
        return getGithubRegisteredAt();
    }

    @Override
    public LocalDateTime value7() {
        return getRegisteredAt();
    }

    @Override
    public GithubUserRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public GithubUserRecord value2(String value) {
        setLogin(value);
        return this;
    }

    @Override
    public GithubUserRecord value3(String value) {
        setEmail(value);
        return this;
    }

    @Override
    public GithubUserRecord value4(String value) {
        setFullName(value);
        return this;
    }

    @Override
    public GithubUserRecord value5(String value) {
        setAccessToken(value);
        return this;
    }

    @Override
    public GithubUserRecord value6(LocalDateTime value) {
        setGithubRegisteredAt(value);
        return this;
    }

    @Override
    public GithubUserRecord value7(LocalDateTime value) {
        setRegisteredAt(value);
        return this;
    }

    @Override
    public GithubUserRecord values(Long value1, String value2, String value3, String value4, String value5, LocalDateTime value6, LocalDateTime value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached GithubUserRecord
     */
    public GithubUserRecord() {
        super(GithubUser.GITHUB_USER);
    }

    /**
     * Create a detached, initialised GithubUserRecord
     */
    public GithubUserRecord(Long id, String login, String email, String fullName, String accessToken, LocalDateTime githubRegisteredAt, LocalDateTime registeredAt) {
        super(GithubUser.GITHUB_USER);

        setId(id);
        setLogin(login);
        setEmail(email);
        setFullName(fullName);
        setAccessToken(accessToken);
        setGithubRegisteredAt(githubRegisteredAt);
        setRegisteredAt(registeredAt);
    }
}
