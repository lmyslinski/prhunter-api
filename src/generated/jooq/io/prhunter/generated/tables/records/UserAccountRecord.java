/*
 * This file is generated by jOOQ.
 */
package io.prhunter.generated.tables.records;


import io.prhunter.generated.tables.UserAccount;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserAccountRecord extends UpdatableRecordImpl<UserAccountRecord> implements Record4<String, Long, String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.user_account.firebase_user_id</code>.
     */
    public UserAccountRecord setFirebaseUserId(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.user_account.firebase_user_id</code>.
     */
    public String getFirebaseUserId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>public.user_account.github_user_id</code>.
     */
    public UserAccountRecord setGithubUserId(Long value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.user_account.github_user_id</code>.
     */
    public Long getGithubUserId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>public.user_account.github_access_token</code>.
     */
    public UserAccountRecord setGithubAccessToken(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.user_account.github_access_token</code>.
     */
    public String getGithubAccessToken() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.user_account.eth_wallet_address</code>.
     */
    public UserAccountRecord setEthWalletAddress(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.user_account.eth_wallet_address</code>.
     */
    public String getEthWalletAddress() {
        return (String) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<String, Long, String, String> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<String, Long, String, String> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return UserAccount.USER_ACCOUNT.FIREBASE_USER_ID;
    }

    @Override
    public Field<Long> field2() {
        return UserAccount.USER_ACCOUNT.GITHUB_USER_ID;
    }

    @Override
    public Field<String> field3() {
        return UserAccount.USER_ACCOUNT.GITHUB_ACCESS_TOKEN;
    }

    @Override
    public Field<String> field4() {
        return UserAccount.USER_ACCOUNT.ETH_WALLET_ADDRESS;
    }

    @Override
    public String component1() {
        return getFirebaseUserId();
    }

    @Override
    public Long component2() {
        return getGithubUserId();
    }

    @Override
    public String component3() {
        return getGithubAccessToken();
    }

    @Override
    public String component4() {
        return getEthWalletAddress();
    }

    @Override
    public String value1() {
        return getFirebaseUserId();
    }

    @Override
    public Long value2() {
        return getGithubUserId();
    }

    @Override
    public String value3() {
        return getGithubAccessToken();
    }

    @Override
    public String value4() {
        return getEthWalletAddress();
    }

    @Override
    public UserAccountRecord value1(String value) {
        setFirebaseUserId(value);
        return this;
    }

    @Override
    public UserAccountRecord value2(Long value) {
        setGithubUserId(value);
        return this;
    }

    @Override
    public UserAccountRecord value3(String value) {
        setGithubAccessToken(value);
        return this;
    }

    @Override
    public UserAccountRecord value4(String value) {
        setEthWalletAddress(value);
        return this;
    }

    @Override
    public UserAccountRecord values(String value1, Long value2, String value3, String value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UserAccountRecord
     */
    public UserAccountRecord() {
        super(UserAccount.USER_ACCOUNT);
    }

    /**
     * Create a detached, initialised UserAccountRecord
     */
    public UserAccountRecord(String firebaseUserId, Long githubUserId, String githubAccessToken, String ethWalletAddress) {
        super(UserAccount.USER_ACCOUNT);

        setFirebaseUserId(firebaseUserId);
        setGithubUserId(githubUserId);
        setGithubAccessToken(githubAccessToken);
        setEthWalletAddress(ethWalletAddress);
    }
}
