name: Continous Delivery
name: Release to prod

on:
  release:
    types: [created]

env:
  DEPLOYMENT_NAME: api
  IMAGE: api

jobs:
    tag-docker-image:
      name: Tag release image
      runs-on: ubuntu-latest
      needs: test
      steps:
        - uses: actions/checkout@v2
          name: Set up JDK 16
        - uses: actions/setup-java@v1
          with:
            java-version: 16

        # Setup doctl
        - name: Install doctl
          uses: digitalocean/action-doctl@v2
          with:
            token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
        - name: Log in to DO Container Registry
          run: doctl registry login --expiry-seconds 1200
        - name: Pull the release image
          run: docker pull registry.digitalocean.com/prhunter/$IMAGE:${{github.sha}}
        - name: Tag the image with release tag
          run: docker tag registry.digitalocean.com/prhunter/$IMAGE:${{github.sha}} registry.digitalocean.com/prhunter/$IMAGE:${{github.ref.name}}
        - name: Push the updated release tag
          run: docker push registry.digitalocean.com/prhunter/$IMAGE:${{github.ref.name}}

    deploy-api-production:
      name: Deploy api to production
      runs-on: ubuntu-latest
      needs: deploy-api-staging
      steps:
        - name: Checkout
          uses: actions/checkout@v2

        # Setup doctl
        - name: Install doctl
          uses: digitalocean/action-doctl@v2
          with:
            token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

        - run: |-
            doctl kubernetes cluster kubeconfig save prhunter-k8s

        - run: |-
            kubectl --namespace=production set image deployment/$DEPLOYMENT_NAME $IMAGE=registry.digitalocean.com/prhunter/$IMAGE:${{github.ref.name}}
            kubectl --namespace=production rollout status deployment/$DEPLOYMENT_NAME
            kubectl --namespace=production get services -o wide


#TODO:
# - Verify that release was successfull
# - Run sanity tests on prod after release