name: Continous Delivery

on:
  push:
    branches:
      - master

env:
  DEPLOYMENT_NAME: api
  IMAGE: api

jobs:
    compile:
      name: Compile
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v2
          name: Set up JDK 17
        - uses: actions/setup-java@v1
          with:
            java-version: 17
        - name: Cache Gradle packages
          uses: actions/cache@v2
          with:
            path: |
              ~/.gradle/caches
              ~/.gradle/wrapper
            key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
            restore-keys: |
              ${{ runner.os }}-gradle-

        - name: Build with Gradle
          run: ./gradlew build -x test
    test:
      name: Test
      runs-on: ubuntu-latest
      needs: compile
      steps:
        - uses: actions/checkout@v2
          name: Set up JDK 17
        - uses: actions/setup-java@v1
          with:
            java-version: 17
        - name: Cache Gradle packages
          uses: actions/cache@v2
          with:
            path: |
              ~/.gradle/caches
              ~/.gradle/wrapper
            key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
            restore-keys: |
              ${{ runner.os }}-gradle-

        - name: Test
          run: ./gradlew test

        - name: Publish Test results
          uses: ashley-taylor/junit-report-annotations-action@master
          with:
            access-token: ${{ secrets.GITHUB_TOKEN }}
          if: always()

    build-docker-image:
      name: Build & Push Docker image
      runs-on: ubuntu-latest
      needs: test
      steps:
        - uses: actions/checkout@v2
          name: Set up JDK 17
        - uses: actions/setup-java@v1
          with:
            java-version: 17
            
        # Setup doctl
        - name: Install doctl
          uses: digitalocean/action-doctl@v2
          with:
            token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
        - name: Log in to DO Container Registry
          run: doctl registry login --expiry-seconds 1200
        - name: Build Docker image
          run: ./gradlew jib
        - name: Cleanup Gradle Cache
          # Remove some files from the Gradle cache, so they aren't cached by GitHub Actions.
          # Restoring these files from a GitHub Actions cache might cause problems for future builds.
          run: |
            rm -f ~/.gradle/caches/modules-2/modules-2.lock
            rm -f ~/.gradle/caches/modules-2/gc.properties

    deploy-api-production:
      name: Deploy api to production
      runs-on: ubuntu-latest
      needs: deploy-api-staging
      steps:
        - name: Checkout
          uses: actions/checkout@v2

        # Setup doctl
        - name: Install doctl
          uses: digitalocean/action-doctl@v2
          with:
            token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

        - run: |-
            doctl kubernetes cluster kubeconfig save prhunter-k8s

        - run: |-
            kubectl --namespace=production set image deployment/$DEPLOYMENT_NAME $IMAGE=registry.digitalocean.com/prhunter/$IMAGE:${{github.sha}} --record
            kubectl --namespace=production rollout status deployment/$DEPLOYMENT_NAME
            kubectl --namespace=production get services -o wide